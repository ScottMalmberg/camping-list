{"version":3,"sources":["components/ListItem.js","components/List.js","components/AddItem.js","components/SetLocation.js","components/Weather.js","App.js","index.js"],"names":["ListItem","getStyle","backgroundColor","props","item","completed","color","borderRadius","this","id","name","style","className","onClick","toggleComplete","bind","deleteItem","Component","List","items","map","key","React","AddItem","state","onChange","e","setState","target","value","onSubmit","preventDefault","alert","addItem","type","placeholder","autoComplete","SetLocation","location","setLocation","flex","Weather","fetch","then","response","json","results","console","log","data","day","minTemp","Math","round","min_temp","maxTemp","max_temp","dates","datetime","split","join","icons","weather","icon","description","catch","err","days","forecast","min","i","uuid","v4","Date","getDay","src","alt","App","filter","newItem","window","onload","randomNum","floor","random","document","getElementById","backgroundImage","ReactDOM","render"],"mappings":"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","file":"static/js/main.c8679fae.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class ListItem extends Component {\r\n    getStyle = () => {\r\n        return {\r\n            backgroundColor: this.props.item.completed ? '#CCFBFE' : 'transparent',\r\n            color: this.props.item.completed ? 'rgba(34,34,34,.5)' : 'white',\r\n            borderRadius: this.props.item.completed ? '.5em' : ''\r\n         }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { id, name } = this.props.item;\r\n        return (\r\n            <div style={this.getStyle()} className=\"item\">\r\n              <p> \r\n                <button className=\"button list-button\" id=\"check-button\" onClick={this.props.toggleComplete.bind(this, id)}><i className=\"fa fa-check\"></i></button>         \r\n                {name}\r\n                <button className=\"button list-button\" id=\"delete-button\" onClick={this.props.deleteItem.bind(this, id)}><i className=\"fa fa-remove\"></i></button> \r\n              </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nListItem.propTypes = {\r\n    item: PropTypes.object.isRequired\r\n}\r\n\r\n\r\nexport default ListItem\r\n","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass List extends React.Component{\r\n    \r\n\r\n    render() {\r\n\r\n        const items = this.props.items.map(item => \r\n            <ListItem \r\n                item={item} \r\n                key={item.id} \r\n                toggleComplete={this.props.toggleComplete} \r\n                deleteItem={this.props.deleteItem} \r\n        />);\r\n\r\n        return (\r\n            <div id=\"list\">                     \r\n                {items}                     \r\n            </div>\r\n        );\r\n    }\r\n    \r\n  }\r\n\r\n  //PropTypes\r\n  List.propTypes = {\r\n      items: PropTypes.array.isRequired\r\n  }\r\n\r\n  export default List;","import React, { Component } from 'react'\r\n\r\nexport class AddItem extends Component {\r\n    state = {\r\n        name: \"\"\r\n    }\r\n\r\n    // handles change and sets state based on the name of the input being changed (e.g. \"name\")\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n    onSubmit = (e) => {\r\n        // empty item catch\r\n        if(this.state.name === \"\") {\r\n            e.preventDefault();\r\n            return alert(\"You can't bring nothing to camp :) Try adding an item again!\")\r\n        }\r\n        // stops it from submitting to the file\r\n        e.preventDefault();\r\n        // passes up the input\r\n        this.props.addItem(this.state.name);\r\n        // resets input field\r\n        this.setState({name: \"\"});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form\" id=\"item-form\" onSubmit={this.onSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"name\" \r\n                    placeholder=\"Add an item...\" \r\n                    value={this.state.name} \r\n                    onChange={this.onChange}\r\n                    autoComplete=\"off\"\r\n                    className=\"input\"\r\n                    id=\"item-input\"\r\n                />              \r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Add\" \r\n                    className=\"button\"\r\n                    id=\"add-button\"                                    \r\n                />\r\n            </form>         \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddItem\r\n","import React, { Component } from 'react'\r\n\r\nexport class SetLocation extends Component {\r\n    state = {\r\n        location: \"\"\r\n    }\r\n\r\n    // handles change and sets state based on the name of the input being changed (e.g. \"name\")\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n    onSubmit = (e) => {\r\n         // stops it from submitting to the file\r\n        e.preventDefault();\r\n         // passes up the input\r\n        this.props.setLocation(this.state.location);\r\n        // resets input field\r\n        this.setState({location: \"\"});\r\n        }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"form\" id=\"set-location\" onSubmit={this.onSubmit}>\r\n                <h2>Where are you off to?</h2>\r\n                <input \r\n                    type=\"text\" \r\n                    name=\"location\" \r\n                    value={this.state.location}\r\n                    onChange={this.onChange} \r\n                    autoComplete=\"off\"\r\n                    className=\"input\"\r\n                    id=\"location-input\"\r\n                    placeholder='Type a location...'\r\n                />              \r\n                <input \r\n                    type=\"submit\" \r\n                    value=\"Set\" \r\n                    className=\"button\"\r\n                    id=\"location-button\"\r\n                    style={{flex:\"1\"}}                   \r\n                />\r\n            </form>         \r\n        );\r\n    }\r\n}\r\n\r\nexport default SetLocation\r\n","import React, { Component } from 'react'\r\nimport uuid from 'uuid';\r\nimport SetLocation from './SetLocation'\r\n\r\nexport class Weather extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            location: \"\",\r\n            minTemp: [],\r\n            maxTemp: [],\r\n            dates: [],\r\n            icons: [],\r\n            description: []    \r\n        };\r\n    }\r\n\r\n    setLocation = (location) => {\r\n        this.setState({location})\r\n\r\n        fetch('https://api.weatherbit.io/v2.0/forecast/daily?city=' + location + '&units=I&days=5&key=45215d29d9a7469e97f7d9879eaa6e0f')\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .then(results => {\r\n            console.log(results);\r\n            results.data.map(day => {\r\n                return this.setState({\r\n                    minTemp: [...this.state.minTemp, Math.round(day.min_temp)], \r\n                    maxTemp: [...this.state.maxTemp, Math.round(day.max_temp)],\r\n                    dates: [...this.state.dates, day.datetime.split('-').join()],\r\n                    icons: [...this.state.icons, \"./icons/\" + day.weather.icon + \".png\"],\r\n                    description: [...this.state.description, day.weather.description]\r\n                })   \r\n            })\r\n        })\r\n        .catch((err) => {\r\n            alert(\"Please input location in 'City, State' format\");\r\n            console.log(err);\r\n            this.setState({location: \"\"})\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        const {minTemp, maxTemp, dates} = this.state;\r\n        const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n        const forecast = minTemp.map((min, i) => \r\n            <div className=\"col weather-day\" id= {\"weather-day-\" + i} key= {uuid.v4()}>\r\n                <div className=\"weather-header-container\">\r\n                    <h3>{days[new Date(dates[i]).getDay()]}</h3>\r\n                </div>\r\n                <div className=\"weather-description-container\">\r\n                    <p>{this.state.description[i]}</p>\r\n                </div>\r\n                <div className=\"icon-container\">\r\n                    <img src={this.state.icons[i]} alt={\"Image of \" + this.state.description[i]} className=\"icon\"></img>\r\n                </div>\r\n                <div className=\"weather-high-low-container\">\r\n                    <p>High: {maxTemp[i]}</p>\r\n                    <p>Low: {min}</p> \r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n        if(!this.state.location) {\r\n            return (\r\n                <div className=\"row\" id=\"weather-row\">\r\n                    <SetLocation setLocation={this.setLocation}/>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"row\" id=\"weather-row\">\r\n                    {forecast}\r\n                </div>\r\n            )\r\n            \r\n        }\r\n        \r\n    }\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport List from './components/List'\r\nimport AddItem from './components/AddItem';\r\nimport uuid from 'uuid';\r\nimport Weather from './components/Weather';\r\n\r\n\r\nclass App extends React.Component{\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      items: [\r\n        {\r\n          id: uuid.v4(),\r\n          name: \"Tent\", \r\n          completed: false\r\n        },\r\n        {\r\n          id: uuid.v4(),\r\n          name: \"Sleeping bag\", \r\n          completed: false\r\n        },\r\n        {\r\n          id: uuid.v4(),\r\n          name: \"Camping chair\", \r\n          completed: false\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  \r\n  // toggle complete\r\n  toggleComplete = (id) => {\r\n    this.setState({items: this.state.items.map(item => {\r\n      if(item.id === id) {\r\n        item.completed = !item.completed\r\n      }\r\n      return item;\r\n    })})\r\n  }\r\n\r\n  // delete item\r\n  deleteItem = (id) => {\r\n    this.setState({items: [...this.state.items.filter(item => item.id !== id)]})\r\n  }\r\n\r\n  // add item\r\n  addItem = (name) => {\r\n    const newItem = {\r\n      id: uuid.v4(),\r\n      name: name,\r\n      completed: false\r\n    }\r\n    this.setState({items: [...this.state.items, newItem]})\r\n  }\r\n\r\n  render() {\r\n\r\n    // pick random background image\r\n    window.onload = function pickBackground() {\r\n      const randomNum = Math.floor(Math.random() * (24 - 1 + 1)) + 1;\r\n      return document.getElementById(\"app-container\").style.backgroundImage = \"url(./images/\" + randomNum + \".jpg)\";\r\n  }\r\n\r\n    return (\r\n      <div className=\"container-fluid\" id=\"app-container\">  \r\n        <Weather />\r\n        <div className=\"row\" id=\"list-row\">\r\n          <div id=\"todo-container\">\r\n            <div id=\"list-div\">\r\n              <h3 id=\"list-heading\">Pack</h3>\r\n              <List \r\n                items={this.state.items} \r\n                toggleComplete={this.toggleComplete} \r\n                deleteItem={this.deleteItem} />\r\n            </div>\r\n            \r\n            <div id=\"add-div\">\r\n              <AddItem addItem={this.addItem}/> \r\n            </div>        \r\n          </div>         \r\n        </div>\r\n      </div>\r\n    );\r\n  } \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n\r\n"],"sourceRoot":""}